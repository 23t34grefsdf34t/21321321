local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local http = syn and syn.request or http_request

local USERTOKEN = "ODEwMzkzNjIxNjY4Mjk4Nzcy.GV9Mf0.SXRI8mDq2-pBfTmfXV0nsykb0T3gaAu1MkCMBg"
local CHANNELS = {
    "1401775125765947442",
    "1401775061706346536"
}

local player = Players.LocalPlayer

-- Remove previous GUIs
local old = player.PlayerGui:FindFirstChild("W89JoinerGUI")
if old then old:Destroy() end

-- Main GUI (wider, shorter)
local gui = Instance.new("ScreenGui")
gui.Name = "W89JoinerGUI"
gui.ResetOnSpawn = false
gui.Parent = player.PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 430, 0, 180)
frame.Position = UDim2.new(0.5, -215, 0.4, -570)
frame.BackgroundColor3 = Color3.fromRGB(18, 19, 20)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 0
frame.Parent = gui
frame.ClipsDescendants = true
frame.ZIndex = 1

-- Frame border
local border = Instance.new("UIStroke")
border.Color = Color3.fromRGB(255, 200, 30)
border.Thickness = 2
border.Parent = frame

-- Draggable logic
local dragging, dragStart, startPos
frame.Active = true
frame.Selectable = true

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)
frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

-- Title
local title = Instance.new("TextLabel")
title.Text = "⚡w89k's Joiner"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(255, 208, 50)
title.TextStrokeTransparency = 0.5
title.TextSize = 25
title.Size = UDim2.new(1, 0, 0, 38)
title.Position = UDim2.new(0, 0, 0, 10)
title.BackgroundTransparency = 1
title.Parent = frame

-- Subtext/status
local status = Instance.new("TextLabel")
status.Text = "⚡ w89k's Joiner ready!"
status.Font = Enum.Font.Gotham
status.TextColor3 = Color3.fromRGB(240, 240, 240)
status.TextSize = 18
status.Size = UDim2.new(1, -20, 0, 24)
status.Position = UDim2.new(0, 10, 0, 45)
status.BackgroundTransparency = 1
status.TextXAlignment = Enum.TextXAlignment.Left
status.Parent = frame

-- Main details (game, money, players, etc) -- Just ONE LINE
local details = Instance.new("TextLabel")
details.Text = ""
details.Font = Enum.Font.Gotham
details.TextColor3 = Color3.fromRGB(220, 220, 220)
details.TextSize = 16
details.Size = UDim2.new(1, -20, 0, 26)
details.Position = UDim2.new(0, 10, 0, 80)
details.BackgroundTransparency = 1
details.TextXAlignment = Enum.TextXAlignment.Left
details.TextYAlignment = Enum.TextYAlignment.Center
details.TextWrapped = false
details.ClipsDescendants = true
details.Parent = frame

-- Job ID (Mobile) display (truncated, no label)
local jobIdLabel = Instance.new("TextLabel")
jobIdLabel.Text = ""
jobIdLabel.Font = Enum.Font.Code
jobIdLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
jobIdLabel.TextSize = 15
jobIdLabel.Size = UDim2.new(1, -20, 0, 18)
jobIdLabel.Position = UDim2.new(0, 10, 0, 110)
jobIdLabel.BackgroundTransparency = 1
jobIdLabel.TextXAlignment = Enum.TextXAlignment.Left
jobIdLabel.TextWrapped = true
jobIdLabel.Parent = frame

-- "START AUTO-JOIN" button
local joinBtn = Instance.new("TextButton")
joinBtn.Text = "START AUTO-JOIN"
joinBtn.Font = Enum.Font.GothamBold
joinBtn.TextColor3 = Color3.fromRGB(60, 45, 5)
joinBtn.TextSize = 22
joinBtn.BackgroundColor3 = Color3.fromRGB(255, 213, 41)
joinBtn.Size = UDim2.new(1, 0, 0, 42)
joinBtn.Position = UDim2.new(0, 0, 1, -48)
joinBtn.BorderSizePixel = 0
joinBtn.Parent = frame

-- Rounded corners
for _, v in pairs({frame, joinBtn}) do
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 18)
    corner.Parent = v
end

-- Data
local lastMessageIds = {
    ["1401775125765947442"] = nil,
    ["1401775061706346536"] = nil
}
local latestJobIdMobile = nil
local lastGameName, lastMoney, lastPlayers = "", "", ""

-- Helper: Remove asterisks and spaces
local function clean(str)
    if not str then return "" end
    str = tostring(str)
    str = str:gsub("%*+", "") -- remove all *
    str = str:gsub("^%s+", "") -- leading spaces
    str = str:gsub("%s+$", "") -- trailing spaces
    return str
end

-- Helper: Truncate
local function truncate(str, len)
    if #str > len then
        return string.sub(str, 1, len) .. "..."
    else
        return str
    end
end

-- Helper: Update details line
local function updateDetails()
    local name = clean(lastGameName)
    local money = clean(lastMoney)
    local players = clean(lastPlayers)
    details.Text = string.format("🏷 %s  |  💰 %s  |  👥 %s", name, money, players)
    if latestJobIdMobile then
        jobIdLabel.Text = truncate(latestJobIdMobile, 40)
    else
        jobIdLabel.Text = ""
    end
end

-- Button logic: Copy mobile job ID or print
joinBtn.MouseButton1Click:Connect(function()
    if latestJobIdMobile then
        if setclipboard then
            game:GetService("TeleportService"):TeleportToPlaceInstance(109983668079237,latestJobIdMobile)
        end
    end
end)

-- Fetch Discord logic for one channel
local function fetchNewMessagesFromChannel(channelId)
    local url = "https://discord.com/api/v10/channels/" .. channelId .. "/messages?limit=1"
    if lastMessageIds[channelId] then
        url = url .. "&after=" .. lastMessageIds[channelId]
    end

    local res = http({
        Url = url,
        Method = "GET",
        Headers = {
            ["Authorization"] = USERTOKEN,
            ["Content-Type"] = "application/json"
        }
    })

    if res.StatusCode == 200 then
        local messages = HttpService:JSONDecode(res.Body)
        local msg = messages[1]
        if msg then
            lastMessageIds[channelId] = msg.id

            status.Text = "⚡ w89k's Joiner ready!"
            if msg.embeds and #msg.embeds > 0 then
                for _, embed in ipairs(msg.embeds) do
                    if embed.fields then
                        for _, field in ipairs(embed.fields) do
                            local fieldName = field.name or ""
                            local fieldVal = field.value or ""
                            if fieldName:find("Job ID %(Mobile%)") then
                                latestJobIdMobile = clean(fieldVal)
                            elseif fieldName:find("Players") then
                                lastPlayers = clean(fieldVal)
                            elseif fieldName:find("Money per sec") then
                                lastMoney = clean(fieldVal)
                            elseif fieldName:find("Name") then
                                lastGameName = clean(fieldVal)
                            end
                        end
                        if lastGameName ~= "" then
                            status.Text = "✅ Connected! Found: " .. lastGameName
                        end
                        updateDetails()
                    end
                end
            end
        end
    else
        warn("Failed to fetch messages from channel: " .. channelId .. " Status code: " .. tostring(res.StatusCode))
    end
end

-- Initial state
status.Text = "⚡ w89k's Joiner ready!"

-- Poll both channels every ~5 seconds total
while true do
    for _, channelId in ipairs(CHANNELS) do
        fetchNewMessagesFromChannel(channelId)
        task.wait(1)
    end
    task.wait(1)
end
